# binder is a bit finicky
# Some rules based on best guess:
#   1. If X::Y is required for Z: +namespace X
#   2. If -namespace X and X::Y in signature of function Z: -function Z
#   3. -namespace X and +class X::bar -> -namespace X and -class X::bar
#   4. If -Base and +Derived: Not necessarily an error, will not have members of Base
#   5. If template function types cannot be fully deduced by args, do not use it
#   6. Will not +function anything with && in the type signature

### Unwanted

-namespace Util::PCast
-namespace Op::Private
-namespace Expr::Private
-namespace CUID::Private
-namespace PyObj::Private
-namespace Create::Private
-namespace Factory::Private
-namespace Create::String::Private

# Template stuff
-function CUID::is_t
-function CUID::is_any_t
-function Create::literal
-function Create::symbol
-function Hash::singular_helper
-function Hash::singular
-function Hash::hash

# Factory stuff
-function Op::factory
-function Expr::factory
-function Factory::find
-function Factory::factory
-function Op::unsafe_add_reversed_children
-function Factory::FactoryMade::static_type_check

# Backtrace stuff
-function Util::Backtrace::native
-function Util::Backtrace::backward
-function Util::Backtrace::Lazy::create
-function Util::Backtrace::handle_signals

# Kill things which need these
-class std::sstream
-class std::ostream

# External namespaces
-namespace backward
-namespace boost
-namespace z3

# Util
-function Util::checked_static_cast
-function Util::OStream
-function Util::empty
-function Util::full

# Constructors
-function Factory::FactoryMade::FactoryMade
-function Hash::Hashed::Hashed
-function HasRepr::HasRepr

### Wanted

+namespace Create
+namespace PyObj
+namespace Expr
+namespace Mode
+namespace Op

# Base classes
+class Factory::FactoryMade
+class HasRepr

# Backtraces
+class Util::Backtrace::Lazy
+class Util::Err::Claricpp

# Backend
+class Backend::Z3::Solver
+class Backend::Z3::Z3
